{"mappings":"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","sources":["node_modules/simplelightbox/dist/simple-lightbox.esm.js","src/index.js","src/news-service.js"],"sourcesContent":["/*!\r\n\tBy André Rinas, www.andrerinas.de\r\n\tDocumentation, www.simplelightbox.de\r\n\tAvailable for use under the MIT License\r\n\tVersion 2.10.3\r\n*/\nclass SimpleLightbox {\n\n    defaultOptions = {\n        sourceAttr: 'href',\n        overlay: true,\n        overlayOpacity: 0.7,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5\n    };\n\n    transitionPrefix;\n    isPassiveEventsSupported;\n    transitionCapable = false;\n\n    isTouchDevice = ('ontouchstart' in window);\n    isAppleDevice = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\n    initialLocationHash;\n\n    pushStateSupport = ('pushState' in history);\n\n    isOpen = false;\n    isAnimating = false;\n    isClosing = false;\n    isFadeIn = false;\n    urlChangedOnce = false;\n    hashReseted = false;\n    historyHasChanges = false;\n    historyUpdateTimeout = null;\n\n    currentImage;\n    eventNamespace = 'simplelightbox';\n    domNodes = {};\n\n    loadedImages = [];\n    initialImageIndex = 0;\n    currentImageIndex = 0;\n\n    initialSelector = null;\n    globalScrollbarWidth = 0;\n\n    controlCoordinates = {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n    };\n\n    constructor(elements, options) {\n\n        this.options = Object.assign(this.defaultOptions, options);\n        this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n        if (typeof elements === 'string') {\n            this.initialSelector = elements;\n            this.elements = Array.from(document.querySelectorAll(elements));\n        } else {\n            this.elements = ((typeof elements.length !== 'undefined') && elements.length > 0) ? Array.from(elements) : [elements];\n        }\n\n        this.relatedElements = [];\n\n        this.transitionPrefix = this.calculateTransitionPrefix();\n        this.transitionCapable = this.transitionPrefix !== false;\n        this.initialLocationHash = this.hash;\n\n        // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n        if (this.options.rel) {\n            this.elements = this.getRelated(this.options.rel);\n        }\n\n        if (this.options.uniqueImages) {\n            let imgArr = [];\n            this.elements = Array.from(this.elements).filter(\n                element => {\n                    let src = element.getAttribute(this.options.sourceAttr);\n                    if(imgArr.indexOf(src) === -1) {\n                        imgArr.push(src);\n                        return true;\n                    }\n                    return false;\n                }\n            );\n        }\n\n        this.createDomNodes();\n\n        if (this.options.close) {\n            this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n        }\n\n        if (this.options.nav) {\n            this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n        }\n\n        if (this.options.spinner) {\n            this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n        }\n\n        this.addEventListener(this.elements, 'click.' + this.eventNamespace, (event) => {\n\n            if (this.isValidLink(event.currentTarget)) {\n                event.preventDefault();\n                if (this.isAnimating) {\n                    return false;\n                }\n\n                this.initialImageIndex = this.elements.indexOf(event.currentTarget);\n                this.openImage(event.currentTarget);\n            }\n        });\n\n        // close addEventListener click addEventListener doc\n        if (this.options.docClose) {\n            this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], (event) => {\n                if (this.isOpen && event.target === event.currentTarget) {\n                    this.close();\n                }\n            });\n        }\n\n        // disable rightclick\n        if (this.options.disableRightClick) {\n            this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, (event) => {\n                if (event.target.parentElement.classList.contains(\"sl-image\")) {\n                    event.preventDefault();\n                }\n            });\n        }\n\n        // keyboard-control\n        if (this.options.enableKeyboard) {\n            this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle((event) => {\n                this.controlCoordinates.swipeDiff = 0;\n                // keyboard control only if lightbox is open\n\n                if (this.isAnimating && event.key === 'Escape') {\n                    this.currentImage.setAttribute('src', '');\n                    this.isAnimating = false;\n                    return this.close();\n                }\n\n                if (this.isOpen) {\n                    event.preventDefault();\n                    if (event.key === 'Escape') {\n                        this.close();\n                    }\n                    if(!this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n                      this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n                    }\n                }\n            }, this.options.throttleInterval));\n        }\n\n        this.addEvents();\n    }\n\n    checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        let supportsPassive = false;\n        try {\n            let opts = Object.defineProperty({}, 'passive', {\n                get: function() {\n                    supportsPassive = true;\n                }\n            });\n            window.addEventListener(\"testPassive\", null, opts);\n            window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n        return supportsPassive;\n    }\n\n    createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = this.options.overlayOpacity;\n\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = `<button class=\"sl-prev\">${this.options.navText[0]}</button><button class=\"sl-next\">${this.options.navText[1]}</button>`;\n\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n        if (this.options.captionClass) {\n            this.domNodes.caption.classList.add(this.options.captionClass);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex',-1);\n        this.domNodes.wrapper.setAttribute('role','dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden',false);\n        if (this.options.className) {\n            this.domNodes.wrapper.classList.add(this.options.className);\n        }\n        if(this.options.rtl) {\n            this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n    }\n\n    throttle(func, limit) {\n        let inThrottle;\n        return function () {\n            if (!inThrottle) {\n                func.apply(this, arguments);\n                inThrottle = true;\n                setTimeout(function () {\n                    return inThrottle = false;\n                }, limit);\n            }\n        };\n    }\n\n    isValidLink(element) {\n        return (!this.options.fileExt) || ( element.getAttribute(this.options.sourceAttr) && (new RegExp('(' + this.options.fileExt + ')$', 'i')).test(element.getAttribute(this.options.sourceAttr)));\n    }\n\n    calculateTransitionPrefix() {\n        let s = (document.body || document.documentElement).style;\n\n        return 'transition' in s ? '' :\n            'WebkitTransition' in s ? '-webkit-' :\n                'MozTransition' in s ? '-moz-' :\n                    'OTransition' in s ? '-o' :\n                        false;\n    }\n\n    toggleScrollbar(type) {\n        let scrollbarWidth = 0;\n        let fixedElements =  [].slice.call(document.querySelectorAll('.'+this.options.fixedClass))\n        if (type === 'hide') {\n            let fullWindowWidth = window.innerWidth;\n            if (!fullWindowWidth) {\n                let documentElementRect = document.documentElement.getBoundingClientRect();\n                fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n            }\n            if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n                let scrollDiv = document.createElement('div'),\n                    paddingRight = parseInt(document.body.style.paddingRight || 0, 10);\n\n                scrollDiv.classList.add('sl-scrollbar-measure');\n\n                document.body.appendChild(scrollDiv);\n                scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n                document.body.removeChild(scrollDiv);\n\n                document.body.dataset.originalPaddingRight = paddingRight;\n                if (scrollbarWidth > 0 || (scrollbarWidth == 0 && this.isAppleDevice)) {\n                    document.body.classList.add('hidden-scroll');\n                    document.body.style.paddingRight = (paddingRight + scrollbarWidth) + 'px';\n\n                    fixedElements.forEach(element => {\n                        const actualPadding = element.style.paddingRight\n                        const calculatedPadding = window.getComputedStyle(element)['padding-right']\n                        element.dataset.originalPaddingRight = actualPadding;\n                        element.style.paddingRight = `${parseFloat(calculatedPadding) + scrollbarWidth}px`\n                    });\n\n                }\n            }\n        } else {\n            document.body.classList.remove('hidden-scroll');\n            document.body.style.paddingRight = document.body.dataset.originalPaddingRight;\n\n            fixedElements.forEach(element => {\n                const padding = element.dataset.originalPaddingRight;\n                if (typeof padding !== 'undefined') {\n                    element.style.paddingRight = padding\n                }\n            });\n        }\n        return scrollbarWidth;\n    }\n\n    close() {\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n            return false;\n        }\n\n        this.isClosing = true;\n        let element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n            this.historyHasChanges = false;\n            if(!this.hashReseted) {\n                this.resetHash();\n            }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n\n        this.fadeOut(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeOut(document.querySelectorAll('.sl-image img,  .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, () => {\n            if (this.options.disableScroll) {\n                this.toggleScrollbar('show');\n            }\n\n            if (this.options.htmlClass && this.options.htmlClass !== '') {\n                document.querySelector('html').classList.remove(this.options.htmlClass);\n            }\n\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n            this.domNodes.additionalHtml = null;\n\n            element.dispatchEvent(new Event('closed.simplelightbox'));\n\n            this.isClosing = false;\n        });\n\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false;\n\n        // reset touchcontrol coordinates\n        for (let key in this.controlCoordinates) {\n            this.controlCoordinates[key] = 0;\n        }\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n    }\n\n    get hash() {\n        return window.location.hash.substring(1);\n    }\n\n    preload() {\n        let index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = (index + 1 < 0) ? length - 1 : (index + 1 >= length - 1) ? 0 : index + 1,\n            prev = (index - 1 < 0) ? length - 1 : (index - 1 >= length - 1) ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n\n        nextImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) { //is this condition even required... setting multiple times will not change usage...\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + this.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n\n        prevImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) {\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + this.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n\n    loadImage(direction) {\n        let slideDirection = direction;\n        if(this.options.rtl) {\n            direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n\n        let newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n            return false;\n        }\n\n        this.currentImageIndex = (newIndex < 0) ? this.relatedElements.length - 1 : (newIndex > this.relatedElements.length - 1) ? 0 : newIndex;\n\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n\n        if (this.options.animationSlide) {\n            this.slide(this.options.animationSpeed / 1000, (-100 * slideDirection) - this.controlCoordinates.swipeDiff + 'px');\n        }\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, () => {\n            this.isAnimating = true;\n            if(!this.isClosing) {\n                setTimeout(() => {\n                    let element = this.relatedElements[this.currentImageIndex];\n                    this.currentImage.setAttribute('src', element.getAttribute(this.options.sourceAttr));\n\n                    if (this.loadedImages.indexOf(element.getAttribute(this.options.sourceAttr)) === -1) {\n                        this.show(this.domNodes.spinner);\n                    }\n\n                    if(this.domNodes.image.contains(this.domNodes.caption)) {\n                      this.domNodes.image.removeChild(this.domNodes.caption);\n                    }\n\n                    this.adjustImage(slideDirection);\n                    if (this.options.preloading) this.preload();\n                }, 100);\n            } else {\n                this.isAnimating = false;\n            }\n        });\n    }\n\n    adjustImage(direction) {\n        if (!this.currentImage) {\n            return false;\n        }\n\n        let tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n\n        tmpImage.addEventListener('error', (event) => {\n            this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('error.' + this.eventNamespace));\n            this.isAnimating = false;\n            this.isOpen = true;\n            this.domNodes.spinner.style.display = 'none';\n\n            let dirIsDefined = direction === 1 || direction === -1;\n            if (this.initialImageIndex === this.currentImageIndex && dirIsDefined) {\n                return this.close();\n            }\n\n            if (this.options.alertError) {\n                alert(this.options.alertErrorMessage);\n            }\n\n            this.loadImage(dirIsDefined ? direction : 1);\n        });\n\n\n        tmpImage.addEventListener('load', (event) => {\n            if (typeof direction !== 'undefined') {\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('changed.' + this.eventNamespace));\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + this.eventNamespace));\n            }\n\n            // history\n            if (this.options.history) {\n                this.updateURL();\n            }\n\n            if (this.loadedImages.indexOf(this.currentImage.getAttribute('src')) === -1) {\n                this.loadedImages.push(this.currentImage.getAttribute('src'));\n            }\n\n            let imageWidth = event.target.width,\n                imageHeight = event.target.height;\n\n            if (this.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n                let ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n                imageWidth /= ratio;\n                imageHeight /= ratio;\n            }\n\n            this.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n            this.domNodes.image.style.left = (window.innerWidth - imageWidth - this.globalScrollbarWidth) / 2 + 'px';\n            this.domNodes.image.style.width = imageWidth + 'px';\n            this.domNodes.image.style.height = imageHeight + 'px';\n\n            this.domNodes.spinner.style.display = 'none';\n            if( this.options.focus ) {\n                this.forceFocus();\n            }\n            this.fadeIn(this.currentImage, this.options.fadeSpeed, () => {\n                if( this.options.focus ) {\n                    this.domNodes.wrapper.focus();\n                }\n            });\n\n            this.isOpen = true;\n\n            let captionContainer,\n                captionText;\n\n            if (typeof this.options.captionSelector === 'string') {\n                captionContainer = this.options.captionSelector === 'self' ? this.relatedElements[this.currentImageIndex] : this.relatedElements[this.currentImageIndex].querySelector(this.options.captionSelector);\n            } else if (typeof this.options.captionSelector === 'function') {\n                captionContainer = this.options.captionSelector(this.relatedElements[this.currentImageIndex]);\n            }\n\n            if(this.options.captions && captionContainer) {\n                if (this.options.captionType === 'data') {\n                    captionText = captionContainer.dataset[this.options.captionsData];\n                } else if (this.options.captionType === 'text') {\n                    captionText = captionContainer.innerHTML;\n                } else {\n                    captionText = captionContainer.getAttribute(this.options.captionsData);\n                }\n            }\n\n            if (!this.options.loop) {\n                if (this.currentImageIndex === 0) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex >= this.relatedElements.length - 1) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n                if (this.currentImageIndex > 0) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex < this.relatedElements.length - 1) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n            } else {\n                if (this.relatedElements.length === 1) {\n                    this.hide(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                } else {\n                    this.show(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                }\n            }\n\n\n            if (direction === 1 || direction === -1) {\n                if (this.options.animationSlide) {\n                    this.slide(0, 100 * direction + 'px');\n                    setTimeout(() => {\n                        this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                    }, 50);\n                }\n                this.fadeIn(this.domNodes.image, this.options.fadeSpeed, () => {\n                    this.isAnimating = false;\n                    this.setCaption(captionText, imageWidth);\n                });\n\n            } else {\n                this.isAnimating = false;\n                this.setCaption(captionText, imageWidth);\n            }\n\n            if (this.options.additionalHtml && !this.domNodes.additionalHtml) {\n                this.domNodes.additionalHtml = document.createElement('div');\n                this.domNodes.additionalHtml.classList.add('sl-additional-html');\n                this.domNodes.additionalHtml.innerHTML = this.options.additionalHtml;\n                this.domNodes.image.appendChild(this.domNodes.additionalHtml);\n            }\n\n        });\n    }\n\n    zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n\n    };\n\n    minMax(value, min, max) {\n        return (value < min) ? min : (value > max) ? max : value;\n    };\n\n    setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n    };\n\n\n    hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n            this.hashReseted = true;\n            this.close();\n        }\n    }\n\n    addEvents() {\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, (event) => {\n            //this.adjustImage.bind(this)\n            if (this.isOpen) {\n                this.adjustImage();\n            }\n        });\n\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n            setTimeout(() => {\n                this.addEventListener(window, 'hashchange.' + this.eventNamespace, (event) => {\n                    if (this.isOpen) {\n                        this.hashchangeHandler();\n                    }\n                });\n            }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, (event) => {\n            if (!event.currentTarget.tagName.match(/button/i)) {\n                return true;\n            }\n\n            event.preventDefault();\n            this.controlCoordinates.swipeDiff = 0;\n            this.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n            let scale = 1\n\n            this.addEventListener(this.domNodes.image, ['mousewheel','DOMMouseScroll'], (event) => {\n                if (this.controlCoordinates.mousedown || this.isAnimating || this.isClosing || !this.isOpen) {\n                    return true;\n                }\n                if(this.controlCoordinates.containerHeight == 0) {\n                    this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                    this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                    this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                    this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                    this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                    this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                event.preventDefault();\n\n                let delta = event.delta || event.wheelDelta;\n                if (delta === undefined) {\n                    //we are on firefox\n                    delta = event.detail;\n                }\n                delta = Math.max(-1,Math.min(1,delta)); // cap the delta to [-1,1] for cross browser consistency\n\n                // apply zoom\n                scale += delta * this.options.scrollZoomFactor * scale;\n                scale = Math.max(1, Math.min( this.options.maxZoom, scale));\n\n                this.controlCoordinates.targetScale = scale;\n\n                let scrollTopPos = document.documentElement.scrollTop || document.body.scrollTop;\n\n                this.controlCoordinates.pinchOffsetX = event.pageX;\n                this.controlCoordinates.pinchOffsetY = event.pageY - scrollTopPos || 0; // need to substract the scroll position\n\n                this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                if (this.controlCoordinates.targetScale > 1) {\n                    this.controlCoordinates.zoomed = true;\n                    if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                        this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                    }\n                } else {\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                }\n\n                this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n\n                this.setZoomData(this.controlCoordinates.targetScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], (event) => {\n            if (event.target.tagName === 'A' && event.type === 'touchstart') {\n                return true;\n            }\n\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n                this.controlCoordinates.initialPointerOffsetX = event.clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                this.controlCoordinates.capture = true;\n            } else {\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    if (!this.controlCoordinates.doubleTapped) {\n                        this.controlCoordinates.doubleTapped = true;\n                        setTimeout(() => {\n                            this.controlCoordinates.doubleTapped = false;\n                        }, 300);\n                    } else {\n\n                        this.currentImage.classList.add('sl-transition');\n                        if (!this.controlCoordinates.zoomed) {\n                            this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n\n\n                            if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n\n                            this.controlCoordinates.zoomed = true;\n                        } else {\n                            this.controlCoordinates.initialScale = 1;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                            this.controlCoordinates.zoomed = false;\n                        }\n\n                        setTimeout(() => {\n                            if (this.currentImage) {\n                                this.currentImage.classList.remove('sl-transition');\n                            }\n                        }, 200);\n                        return false;\n                    }\n\n                    this.controlCoordinates.initialOffsetX  = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                else if (this.controlCoordinates.touchCount === 2) /* Pinch */ {\n                    this.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                    this.controlCoordinates.pinchOffsetX = (this.controlCoordinates.initialPointerOffsetX + this.controlCoordinates.initialPointerOffsetX2) / 2;\n                    this.controlCoordinates.pinchOffsetY = (this.controlCoordinates.initialPointerOffsetY + this.controlCoordinates.initialPointerOffsetY2) / 2;\n                    this.controlCoordinates.initialPinchDistance = Math.sqrt(((this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2) * (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2)) + ((this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2) * (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2)));\n                }\n                this.controlCoordinates.capture = true;\n            }\n            if(this.controlCoordinates.mousedown) return true;\n            if (this.transitionCapable) {\n                this.controlCoordinates.imageLeft = parseInt(this.domNodes.image.style.left, 10);\n            }\n            this.controlCoordinates.mousedown = true;\n            this.controlCoordinates.swipeDiff = 0;\n            this.controlCoordinates.swipeYDiff = 0;\n            this.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n            this.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n\n            return false;\n        });\n\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], (event) => {\n\n\n            if (!this.controlCoordinates.mousedown) {\n                return true;\n            }\n\n            if (event.type === 'touchmove') {\n                if (this.controlCoordinates.capture === false) {\n                    return false;\n                }\n\n                this.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.touchmoveCount++;\n\n                if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.targetPinchDistance = Math.sqrt(((this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2) * (this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2)) + ((this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2) * (this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2)));\n                    if (this.controlCoordinates.initialPinchDistance === null) {\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.initialPinchDistance - this.controlCoordinates.targetPinchDistance) >= 1) {\n                        /* Initialize helpers */\n                        this.controlCoordinates.targetScale = this.minMax(this.controlCoordinates.targetPinchDistance / this.controlCoordinates.initialPinchDistance * this.controlCoordinates.initialScale, 1, this.options.maxZoom);\n                        this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                        this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                        this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                        this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                        this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                        this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                        if (this.controlCoordinates.targetScale > 1) {\n                            this.controlCoordinates.zoomed = true;\n                            if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n                        }\n\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                        this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                    }\n                } else {\n                    this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n                    this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                    this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                    this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                    this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                        this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n                    }\n\n                    this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n                }\n            }\n\n            /* Mouse Move implementation */\n            if (event.type === 'mousemove' && this.controlCoordinates.mousedown) {\n              if(event.type == 'touchmove') return true;\n\n                event.preventDefault();\n\n              if(this.controlCoordinates.capture === false) return false;\n\n              this.controlCoordinates.pointerOffsetX = event.clientX;\n              this.controlCoordinates.pointerOffsetY = event.clientY;\n\n              this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n              this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n              this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n              this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n              this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                  this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                  this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                  this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                  this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n              }\n\n              this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n              this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            }\n\n            if (!this.controlCoordinates.zoomed) {\n\n                this.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n                this.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n                this.controlCoordinates.swipeDiff = this.controlCoordinates.swipeStart - this.controlCoordinates.swipeEnd;\n                this.controlCoordinates.swipeYDiff = this.controlCoordinates.swipeYStart - this.controlCoordinates.swipeYEnd;\n                if (this.options.animationSlide) {\n                    this.slide(0, -this.controlCoordinates.swipeDiff + 'px');\n                }\n            }\n\n        });\n\n\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], (event) => {\n\n\n            if (this.isTouchDevice && event.type === 'touchend') {\n                this.controlCoordinates.touchCount = event.touches.length;\n                if (this.controlCoordinates.touchCount === 0) /* No touch */ {\n                    /* Set attributes */\n                    if (this.currentImage) {\n                        this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    }\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                } else if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                    this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                } else if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.initialPinchDistance = null;\n                }\n            }\n\n\n            if (this.controlCoordinates.mousedown) {\n                this.controlCoordinates.mousedown = false;\n                let possibleDir = true;\n                if (!this.options.loop) {\n                    if (this.currentImageIndex === 0 && this.controlCoordinates.swipeDiff < 0) {\n                        possibleDir = false;\n                    }\n                    if (this.currentImageIndex >= this.relatedElements.length - 1 && this.controlCoordinates.swipeDiff > 0) {\n                        possibleDir = false;\n                    }\n                }\n                if (Math.abs(this.controlCoordinates.swipeDiff) > this.options.swipeTolerance && possibleDir) {\n                    this.loadImage(this.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n                }\n                else if (this.options.animationSlide) {\n                    this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                }\n\n                if (this.options.swipeClose && Math.abs(this.controlCoordinates.swipeYDiff) > 50 && Math.abs(this.controlCoordinates.swipeDiff) < this.options.swipeTolerance) {\n                    this.close();\n                }\n            }\n        });\n\n        this.addEventListener(this.domNodes.image, ['dblclick'], (event) => {\n            if(this.isTouchDevice) return;\n            this.controlCoordinates.initialPointerOffsetX = event.clientX;\n            this.controlCoordinates.initialPointerOffsetY = event.clientY;\n            this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n            this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n            this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n            this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n            this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n            this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n            this.currentImage.classList.add('sl-transition');\n\n            if(!this.controlCoordinates.zoomed) {\n                this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                    this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                }\n                this.controlCoordinates.zoomed = true;\n            } else {\n                this.controlCoordinates.initialScale = 1;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                this.controlCoordinates.zoomed = false;\n                if (this.domNodes.caption.style.display === 'none') {\n                    this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                }\n\n            }\n            setTimeout(() => {\n                if (this.currentImage) {\n                    this.currentImage.classList.remove('sl-transition');\n                    this.currentImage.style[this.transitionPrefix + 'transform-origin'] = null;\n                }\n            }, 200);\n\n            this.controlCoordinates.capture = true;\n            return false;\n        });\n\n    }\n\n    getDimensions(element) {\n        let styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n            height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n            width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n    }\n\n    updateHash() {\n        let newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n            window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n            // what is the browser target of this?\n            if (this.historyHasChanges) {\n                window.location.replace(newURL);\n            } else {\n                window.location.hash = newHash;\n            }\n        }\n        if(!this.historyHasChanges) {\n            this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n    }\n\n    resetHash() {\n        this.hashReseted = true;\n        if(this.urlChangedOnce) {\n            history.back();\n        } else {\n            if (this.pushStateSupport) {\n                history.pushState('', document.title, window.location.pathname + window.location.search);\n            } else {\n                window.location.hash = '';\n            }\n        }\n        //\n        //in case an history operation is still pending\n        clearTimeout(this.historyUpdateTimeout);\n    }\n\n    updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n        if (!this.historyHasChanges) {\n            this.updateHash(); // first time\n        } else {\n            this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n    }\n\n    setCaption(captionText, imageWidth) {\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n            this.hide(this.domNodes.caption);\n            this.domNodes.caption.style.width = imageWidth + 'px';\n            this.domNodes.caption.innerHTML = captionText;\n\n            this.domNodes.image.appendChild(this.domNodes.caption);\n\n            setTimeout(() => {\n                this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n            }, this.options.captionDelay);\n        }\n    }\n\n    slide(speed, pos) {\n        if (!this.transitionCapable) {\n            return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n\n    getRelated(rel) {\n        let elems;\n        if (rel && rel !== false && rel !== 'nofollow') {\n            elems = Array.from(this.elements).filter(element => element.getAttribute('rel') === rel);\n        } else {\n            elems = this.elements;\n        }\n        return elems;\n    }\n\n    openImage(element) {\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        if (this.options.disableScroll) {\n            this.globalScrollbarWidth = this.toggleScrollbar('hide');\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n            document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n        if (this.options.overlay) {\n            document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n            if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.removeChild(this.domNodes.counter);\n            } else if(this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.appendChild(this.domNodes.counter);\n            }\n        }\n\n        this.isAnimating = true;\n\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n\n        let targetURL = element.getAttribute(this.options.sourceAttr);\n\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n            this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n\n        this.domNodes.image.appendChild(this.currentImage);\n\n\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton], this.options.fadeSpeed);\n\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n\n        this.adjustImage();\n        if (this.options.preloading) {\n            this.preload();\n        }\n\n        setTimeout(() => {\n            element.dispatchEvent(new Event('shown.' + this.eventNamespace));\n        }, this.options.animationSpeed);\n    }\n\n    forceFocus() {\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, event => {\n            if (document !== event.target &&\n                this.domNodes.wrapper !== event.target &&\n                !this.domNodes.wrapper.contains(event.target)) {\n                this.domNodes.wrapper.focus();\n            }\n        });\n    }\n\n    // utility\n    addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        for (let element of elements) {\n            if (!element.namespaces) {\n                element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n            for (let event of events) {\n                let options = opts || false;\n                let needsPassiveFix = ['touchstart', 'touchmove'].indexOf(event.split('.')[0]) >= 0;\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                    if (typeof options === 'object') {\n                        options.passive = true;\n                    } else {\n                        options = {passive: true};\n                    }\n                }\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n            }\n        }\n    }\n\n    removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n        for (let element of elements) {\n            for (let event of events) {\n                if(element.namespaces && element.namespaces[event]) {\n                    element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                    delete element.namespaces[event];\n                }\n            }\n        }\n    }\n\n    fadeOut(elements, duration, callback) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = parseFloat(element) || window.getComputedStyle(element).getPropertyValue(\"opacity\");\n        }\n\n        this.isFadeIn = false;\n\n        let step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if ((currentOpacity -= step) < 0) {\n                    for (let element of elements) {\n                        element.style.display = \"none\";\n                        // element.style.opacity = '';\n                        element.style.opacity = 1;\n                    }\n                    callback && callback.call(this, elements);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    requestAnimationFrame(fade);\n                }\n            };\n\n        fade();\n    }\n\n    fadeIn(elements, duration, callback, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = 0;\n            element.style.display = display || \"block\";\n        }\n\n        this.isFadeIn = true;\n\n        let opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = (16.66666 * opacityTarget) / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if (!((currentOpacity += step) > opacityTarget)) {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    if(!this.isFadeIn) return;\n                    requestAnimationFrame(fade);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = opacityTarget;\n                    }\n                    callback && callback.call(this, elements);\n                }\n            };\n\n        fade();\n    }\n\n    hide(elements) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element.style.display != 'none') {\n                element.dataset.initialDisplay = element.style.display;\n            }\n            element.style.display = 'none';\n        }\n    }\n\n    show(elements, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n    }\n\n    wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n\n    on(events, callback) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            if (!element.fullyNamespacedEvents) {\n                element.fullyNamespacedEvents = {};\n            }\n            for (let event of events) {\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n            }\n        }\n        return this;\n    }\n\n    off(events) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            for (let event of events) {\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                    element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n            }\n        }\n        return this;\n    }\n\n    // api\n\n    open(elem) {\n        elem = elem || this.elements[0];\n        if(typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n            elem = elem.get(0);\n        }\n        this.initialImageIndex = this.elements.indexOf(elem);\n        if(this.initialImageIndex > -1) {\n            this.openImage(elem);\n        }\n    }\n\n    next() {\n        this.loadImage(1);\n    }\n\n    prev() {\n        this.loadImage(-1);\n    }\n\n    // get some useful data\n    getLighboxData() {\n        return {\n            currentImageIndex: this.currentImageIndex,\n            currentImage: this.currentImage,\n            globalScrollbarWidth: this.globalScrollbarWidth\n        };\n    }\n\n    //close is exposed anyways..\n\n    destroy() {\n        //remove all custom event listeners from elements\n        this.off([\n            'close.' + this.eventNamespace,\n            'closed.' + this.eventNamespace,\n            'nextImageLoaded.' + this.eventNamespace,\n            'prevImageLoaded.' + this.eventNamespace,\n            'change.' + this.eventNamespace,\n            'nextDone.' + this.eventNamespace,\n            'prevDone.' + this.eventNamespace,\n            'error.' + this.eventNamespace,\n            'changed.' + this.eventNamespace,\n            'next.' + this.eventNamespace,\n            'prev.' + this.eventNamespace,\n            'show.' + this.eventNamespace,\n            'shown.' + this.eventNamespace\n        ]);\n\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n\n        this.close();\n        if (this.isOpen) {\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n    }\n\n    refresh() {\n        if (!this.initialSelector) {\n            throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        let options = this.options,\n            selector = this.initialSelector;\n\n        this.destroy();\n\n        this.constructor(selector, options);\n\n        return this;\n    }\n}\nexport default SimpleLightbox;\n\nglobal.SimpleLightbox = SimpleLightbox;","//848e9754bca048af8a7f13a118ea5d9f\r\nimport NewsApiService from '../src/news-service.js'\r\nimport SimpleLightbox from \"simplelightbox/dist/simple-lightbox.esm.js\";\r\nimport 'simplelightbox/dist/simple-lightbox.min.css';\r\n\r\nconst refs={\r\n    seachForm:document.querySelector('.js-search-form'),\r\n    contanier:document.querySelector('.gallery'),\r\n    loadMoreBtn:document.querySelector('[data-action=\"load-more\"]')\r\n}\r\nconst newsApiService=new NewsApiService();\r\n\r\nrefs.seachForm.addEventListener('submit',onSearchForm);\r\nfunction onSearchForm(event){\r\n    event.preventDefault();\r\n\r\n    newsApiService.query=event.currentTarget.elements.query.value;\r\n    if (newsApiService.query === ' '){\r\n      return alert('Некоректный запрос')\r\n    }\r\n    newsApiService.resetPage();\r\n    newsApiService.fetchArticles().then(appendArticlesMarkup);\r\n    resetCard(event);\r\n    gallery(event);\r\n}\r\n\r\nfunction appendArticlesMarkup(hits){\r\n    console.log(hits)\r\n    const mapEl=hits.map(el=>{\r\n        const{webformatURL,largeImageURL,likes,views,comments,downloads}=el;\r\n        return `<li>\r\n        <div class=\"photo-card\">\r\n        <div class=\"card\" >\r\n        <a href =\"${largeImageURL}\">\r\n        <img src=\"${largeImageURL}\" alt=\"\" />\r\n        </a>\r\n        </div>\r\n        <div class=\"stats\">\r\n          <p class=\"stats-item\">\r\n            <i class=\"material-icons\"> thumb_up</i>\r\n             ${likes}\r\n          </p>\r\n          <p class=\"stats-item\">\r\n          <i class=\"material-icons\">visibility</i>\r\n          ${views}\r\n          </p>\r\n          <p class=\"stats-item\">\r\n            <i class=\"material-icons\">comment</i>\r\n            ${comments}\r\n          </p>\r\n          <p class=\"stats-item\">\r\n            <i class=\"material-icons\">cloud_download</i>\r\n            ${downloads}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    \r\n      </li>`\r\n    }).join('')\r\n    refs.contanier.insertAdjacentHTML('beforeend',mapEl)\r\n    new SimpleLightbox(\".gallery a\",{\r\n      captionsData: \"alt\",\r\n      captionDelay: 250,\r\n      spinner:true,\r\n      uniqueImages:true,\r\n      showCounter:true,\r\n      overlayOpacity:0.9,\r\n    })\r\n}\r\nfunction resetCard(el){\r\n    const page=document.querySelector('.gallery');\r\n    page.innerHTML=''\r\n}\r\n\r\nwindow.addEventListener('scroll',()=>{\r\n  const documentRect=document.documentElement.getBoundingClientRect()\r\n\r\n  if (documentRect.bottom < document.documentElement.clientHeight +150 ){\r\n    newsApiService.fetchArticles().then(appendArticlesMarkup)\r\n  }\r\n})","// key=28662427-1c9408a3a9576dce683ea6fdd\r\nexport default class NewsApiService{\r\n    constructor(){\r\n        this.searchQuery='';\r\n        this.page=1\r\n    }\r\n\r\n    fetchArticles(){\r\n       return fetch(`https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${this.searchQuery}&per_page=21&page=${this.page}&key=28662427-1c9408a3a9576dce683ea6fdd`)\r\n        .then(r=>r.json())\r\n        .then(data=>{\r\n            this.incrementPage()\r\n            return data.hits\r\n        \r\n        });\r\n    \r\n    }\r\n    incrementPage(){\r\n        this.page+=1;\r\n    }\r\n    resetPage(){\r\n        this.page=1;\r\n    }\r\n    get query(){\r\n        return this.searchQuery;\r\n    }\r\n\r\n    set query(newQuery){\r\n        this.searchQuery=newQuery;\r\n    }\r\n}"],"names":["$092e36a7078f3b91$var$SimpleLightbox","sourceAttr","nav","navText","captions","captionDelay","captionSelector","captionType","captionsData","captionPosition","captionClass","close","closeText","swipeClose","showCounter","fileExt","animationSlide","animationSpeed","preloading","enableKeyboard","loop","rel","docClose","swipeTolerance","className","widthRatio","heightRatio","scaleImageToRatio","disableRightClick","disableScroll","alertError","alertErrorMessage","additionalHtml","history","throttleInterval","doubleTapZoom","maxZoom","htmlClass","rtl","fixedClass","fadeSpeed","uniqueImages","focus","scrollZoom","scrollZoomFactor","transitionPrefix","isPassiveEventsSupported","transitionCapable","isTouchDevice","window","isAppleDevice","test","navigator","platform","initialLocationHash","pushStateSupport","isOpen","isAnimating","isClosing","isFadeIn","urlChangedOnce","hashReseted","historyHasChanges","historyUpdateTimeout","currentImage","eventNamespace","domNodes","loadedImages","swipeDiff","swipeYDiff","swipeStart","swipeEnd","swipeYStart","swipeYEnd","mousedown","imageLeft","zoomed","containerHeight","containerWidth","containerOffsetX","containerOffsetY","imgHeight","imgWidth","capture","initialOffsetX","initialOffsetY","initialPointerOffsetX","initialPointerOffsetY","initialPointerOffsetX2","initialPointerOffsetY2","initialScale","initialPinchDistance","pointerOffsetX","pointerOffsetY","pointerOffsetX2","pointerOffsetY2","targetOffsetX","targetOffsetY","targetScale","pinchOffsetX","pinchOffsetY","limitOffsetX","limitOffsetY","scaleDifference","targetPinchDistance","touchCount","doubleTapped","touchmoveCount","elements","options","Object","assign","this","defaultOptions","checkPassiveEventsSupport","initialSelector","Array","from","document","querySelectorAll","length","relatedElements","calculateTransitionPrefix","hash","getRelated","filter","element","src","getAttribute","imgArr","indexOf","push","createDomNodes","wrapper","appendChild","closeButton","navigation","spinner","event","isValidLink","currentTarget","preventDefault","initialImageIndex","openImage","addEventListener","target","body","parentElement","classList","contains","throttle","controlCoordinates","key","setAttribute","loadImage","addEvents","opts","defineProperty","get","supportsPassive","removeEventListener","e","overlay","createElement","add","dataset","opacityTarget","overlayOpacity","innerHTML","counter","caption","image","limit","inThrottle","func","apply","arguments","setTimeout","RegExp","s","documentElement","style","type","slice","call","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","right","Math","abs","left","clientWidth","scrollDiv","paddingRight","parseInt","offsetWidth","removeChild","originalPaddingRight","scrollbarWidth","forEach","actualPadding","calculatedPadding","getComputedStyle","parseFloat","remove","fixedElements","padding","currentImageIndex","dispatchEvent","Event","resetHash","fadeOut","toggleScrollbar","querySelector","minMax","location","substring","index","next","prev","nextImage","Image","prevImage","direction","slideDirection","newIndex","slide","show","adjustImage","preload","tmpImage","windowWidth","windowHeight","innerHeight","scale","translateX","translateY","zoomPanElement","display","dirIsDefined","alert","updateURL","captionText","imageWidth","width","imageHeight","height","ratio","top","globalScrollbarWidth","forceFocus","fadeIn","captionContainer","hide","setCaption","value","min","max","setZoomData","bind","hashchangeHandler","getElementsByTagName","tagName","match","getDimensions","offsetLeft","offsetTop","delta","wheelDelta","undefined","detail","scrollTopPos","scrollTop","pageX","pageY","opacity","clientX","clientY","touches","sqrt","possibleDir","styles","offsetHeight","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","paddingLeft","newURL","href","split","newHash","title","replace","back","pushState","pathname","search","clearTimeout","updateHash","speed","pos","elems","targetURL","events","callback","wrap","namespaces","passive","duration","element1","getPropertyValue","fade","currentOpacity","step","requestAnimationFrame","element2","initialDisplay","input","Symbol","iterator","fullyNamespacedEvents","elem","jQuery","off","selector","destroy","constructor","$35da740d59af89ba$var$refs","seachForm","contanier","loadMoreBtn","$35da740d59af89ba$var$newsApiService","searchQuery","page","fetchArticles","fetch","then","r","json","data","incrementPage","hits","resetPage","query","newQuery","$35da740d59af89ba$var$appendArticlesMarkup","console","log","mapEl","map","el","webformatURL","largeImageURL","likes","views","comments","downloads","gallery"],"version":3,"file":"index.b74b505f.js.map"}